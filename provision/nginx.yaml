kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  localhost;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            auth_basic           "Authorization required";
            auth_basic_user_file /opt/.htpasswd;
        }
      }
    }
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-sf
  labels:
    app: web1.0
spec:
  selector:
    matchLabels:
      app: web1-pod
  replicas: 3
  template:
    metadata:
      labels:
        app: web1-pod
    spec:
      containers:
        - name: web1-container
# docker build -t nginx:1.21.1-alpine-with-htpasswd build/
# minikube cache add nginx:1.21.1-alpine-with-htpasswd
# minikube image rm "docker.io/library/nginx:1.21.1-alpine-with-htpasswd" # (If rebuild required)
          image: nginx:1.21.1-alpine-with-htpasswd
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
              readOnly: true
          ports:
            - containerPort: 80
              name: web1-nginx-port
          env:
            - name: NGINX_USERNAME
              value: "user1"
            - name: NGINX_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-basic
                  key: user1 # secret generated by secret.yaml
      volumes:
        - name: config
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
kind: Service
apiVersion: v1
metadata:
  name: sf-webserver
spec:
  type: LoadBalancer
  selector:
    app: web1-pod
  ports:
  - protocol: TCP
    nodePort: 31111
    port: 80
    targetPort: web1-nginx-port

#kind: Service
#apiVersion: v1
#metadata:
#  name: sf-webserver
#spec:
#  type: NodePort
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    nodePort: 31111
#    port: 80
#    targetPort: web1-nginx-port
# Service available from this and other nodes



#kind: Service
#apiVersion: v1
#metadata:
#  name: sf-webserver
#spec:
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    port: 80
#    targetPort: web1-nginx-port


#        command: ['sh', '-c', 'echo Hello Kubernetes from the Deployment! && sleep 3600']


