kind: ConfigMap
apiVersion: v1
metadata:
  name: web1-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       80;
          server_name  localhost;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: web1-prod
  labels:
    app: web1.0
spec:
  selector:
    matchLabels:
      app: web1-pod
  replicas: 2
  template:
    metadata:
      labels:
        app: web1-pod
    spec:
      containers:
        - name: web1-container
          image: nginx:1.21.1-alpine
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
              readOnly: true
          ports:
            - containerPort: 80
              name: web1-nginx-port
      volumes:
        - name: config
          configMap:
            name: web1-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
kind: Service
apiVersion: v1
metadata:
  name: web1-nginx-service
spec:
  selector:
    app: web1-pod
  ports:
  - protocol: TCP
    port: 8080
    targetPort: web1-nginx-port
# 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web1-nginx-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "web1.app"
    http:
      paths:
      - path: /web
        pathType: Prefix
        backend:
          service:
            name: web1-nginx-service
            port:
              number: 8080
# curl --header "Host: web1.app" http://$(minikube ip)/web
# or
# echo "$(minikube ip) web1.app" >> /etc/hosts

#kind: Service
#apiVersion: v1
#metadata:
#  name: nginx-service
#spec:
#  type: LoadBalancer
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    nodePort: 31111
#    port: 80
#    targetPort: web1-nginx-port

#kind: Service
#apiVersion: v1
#metadata:
#  name: nginx-service
#spec:
#  type: NodePort
#  selector:
#    app: web1-pod
#  ports:
#  - protocol: TCP
#    nodePort: 31111
#    port: 80
#    targetPort: web1-nginx-port
# Service available from this and other nodes


#        command: ['sh', '-c', 'echo Hello Kubernetes from the Deployment! && sleep 3600']


